(1) 樸素貝氏分類器
#--------------------------------
# 匯入外部模組
#--------------------------------
import numpy as np
import pandas as pd
from sklearn.naive_bayes import GaussianNB

#-------------------------------------------------
# (0) 品級-人工標註
#（1）酒精
#（2）蘋果酸
#（3）灰
#（4）灰分的鹼度
#（5）鎂
#（6）總酚
#（7）黃烷類
#（8）非黃烷類酚類
#（9）原花青素
#（10）顏色強度
#（11）順化
#（12）稀釋葡萄酒的OD280 / OD315
#（13）脯氨酸
#-------------------------------------------------
df = pd.read_csv('wine.csv', names=['d0', 'd1', 'd2', 'd3', 'd4', 'd5', 'd6', 'd7', 'd8', 'd9', 'd10', 'd11', 'd12', 'd13'])

#---------------------------
# 亂數重排資料
#---------------------------
df2 = df.sample(frac=1)
print(df2)

#---------------------------
# 特徵值正規化
#---------------------------
col=['d1', 'd2', 'd3', 'd4', 'd5', 'd6', 'd7', 'd8', 'd9', 'd10', 'd11', 'd12', 'd13']
for c in col:
    df[c] = (df[c] - df[c].mean()) / (df[c].max() - df[c].min())


#---------------------------
# 訓練資料個數
#---------------------------
tn=120

#---------------------------
# 訓練資料及標籤
#---------------------------
training_data  = df2[['d1', 'd2', 'd3', 'd4']][:tn]
training_label = df2['d0'][:tn]

#---------------------------
# 測試資料及標籤
#---------------------------
testing_data  = df2[['d1', 'd2', 'd3', 'd4']][tn:]
testing_label = df2['d0'][tn:]


#***********************************************
# 建立自動分類機器人
#***********************************************
gnb = GaussianNB()
gnb.fit(training_data, training_label)

#---------------------------
# 分類機器人測試
#---------------------------
print('正確標籤:')
print(testing_label.values.tolist())
print()

predict = gnb.predict(testing_data)
print('預測標籤:')
print(predict)
print()

#---------------------------
# 和正確資料比對
#---------------------------
results = testing_label == predict
print('比對結果:')
print(results.tolist())
print()

#---------------------------
# 正確率
#---------------------------
print('正確率:', round(np.sum(results)/len(results), 2))






(2)kNN分類器
#--------------------------------
# 匯入外部模組
#--------------------------------
import numpy as np
import pandas as pd
from sklearn.neighbors import KNeighborsClassifier

#-------------------------------------------------
# (0) 品級-人工標註
#（1）酒精
#（2）蘋果酸
#（3）灰
#（4）灰分的鹼度
#（5）鎂
#（6）總酚
#（7）黃烷類
#（8）非黃烷類酚類
#（9）原花青素
#（10）顏色強度
#（11）順化
#（12）稀釋葡萄酒的OD280 / OD315
#（13）脯氨酸
#-------------------------------------------------
df = pd.read_csv('wine.csv', names=['d0', 'd1', 'd2', 'd3', 'd4', 'd5', 'd6', 'd7', 'd8', 'd9', 'd10', 'd11', 'd12', 'd13'])

#---------------------------
# 亂數重排資料
#---------------------------
df2 = df.sample(frac=1)
print(df2)

#---------------------------
# 特徵值正規化
#---------------------------
col=['d1', 'd2', 'd3', 'd4', 'd5', 'd6', 'd7', 'd8', 'd9', 'd10', 'd11', 'd12', 'd13']
for c in col:
    df[c] = (df[c] - df[c].mean()) / (df[c].max() - df[c].min())


#---------------------------
# 訓練資料個數
#---------------------------
tn=120

#---------------------------
# 訓練資料及標籤
#---------------------------
training_data  = df2[['d1', 'd2', 'd3', 'd4']][:tn]
training_label = df2['d0'][:tn]

#---------------------------
# 測試資料及標籤
#---------------------------
testing_data  = df2[['d1', 'd2', 'd3', 'd4']][tn:]
testing_label = df2['d0'][tn:]


#***********************************************
# 建立自動分類機器人
#***********************************************
knn = KNeighborsClassifier(n_neighbors=5)
knn.fit(training_data, training_label)

#---------------------------
# 分類機器人測試
#---------------------------
print('正確:')
print(testing_label.values.tolist())
print()

predict = knn.predict(testing_data)
print('預測:')
print(predict.tolist())
print()

#---------------------------
# 和正確資料比對
#---------------------------
results = (testing_label == predict)
print('比對:')
print(results.tolist())
print()

#---------------------------
# 正確率
#---------------------------
print('正確率:', round(np.sum(results)/len(results), 2))



