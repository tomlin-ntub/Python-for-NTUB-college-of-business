(1)KNN
#--------------------------------
# 匯入外部模組
#--------------------------------
import numpy as np
import pandas as pd
from sklearn.neighbors import KNeighborsClassifier

#-------------------------------------------------
# 花萼長:0, 花萼寬:1, 花瓣長:2, 花瓣寬:3, 花種:4
#-------------------------------------------------
df = pd.read_csv('iris.csv', names=['d0', 'd1', 'd2', 'd3', 'd4'])

#---------------------------
# 亂數重排資料
#---------------------------
df2 = df.sample(frac=1)
print(df2)


#---------------------------
# 訓練資料個數
#---------------------------
tn=120

#---------------------------
# 訓練資料及標籤
#---------------------------
training_data  = df2[['d0', 'd1', 'd2', 'd3']][:tn]
training_label = df2['d4'][:tn]

#---------------------------
# 測試資料及標籤
#---------------------------
testing_data  = df2[['d0', 'd1', 'd2', 'd3']][tn:]
testing_label = df2['d4'][tn:]

#***********************************************
# 建立自動分類機器人
#***********************************************
knn = KNeighborsClassifier(n_neighbors=3)
knn.fit(training_data, training_label)

#---------------------------
# 分類機器人測試
#---------------------------
print('正確:')
print(testing_label.values.tolist())
print()

predict = knn.predict(testing_data)
print('預測:')
print(predict)
print()

#---------------------------
# 和正確資料比對
#---------------------------
results = testing_label == predict
print('比對:')
print(results)
print()

#---------------------------
# 正確率
#---------------------------
print('正確率:', round(np.sum(results)/len(results), 2))





(2)SVM
#--------------------------------
# 匯入外部模組
#--------------------------------
import numpy as np
import pandas as pd
from sklearn import svm

#-------------------------------------------------
# 花萼長:0, 花萼寬:1, 花瓣長:2, 花瓣寬:3, 花種:4
#-------------------------------------------------
df = pd.read_csv('iris.csv', names=['d0', 'd1', 'd2', 'd3', 'd4'])

#---------------------------
# 亂數重排資料
#---------------------------
df2 = df.sample(frac=1)
print(df2)


#---------------------------
# 訓練資料個數
#---------------------------
tn=120

#---------------------------
# 訓練資料及標籤
#---------------------------
training_data  = df2[['d0', 'd1', 'd2', 'd3']][:tn]
training_label = df2['d4'][:tn]

#---------------------------
# 測試資料及標籤
#---------------------------
testing_data  = df2[['d0', 'd1', 'd2', 'd3']][tn:]
testing_label = df2['d4'][tn:]


#***********************************************
# 建立自動分類機器人
#***********************************************
svm_linear = svm.SVC(kernel='linear', C=1.0)
svm_linear.fit(training_data, training_label)

#---------------------------
# 分類機器人測試
#---------------------------
print('正確:')
print(testing_label.values.tolist())
print()

predict = svm_linear.predict(testing_data)
print('預測:')
print(predict)
print()

#---------------------------
# 和正確資料比對
#---------------------------
results = testing_label == predict
print('比對:')
print(results)
print()

#---------------------------
# 正確率
#---------------------------
print('正確率:', round(np.sum(results)/len(results), 2))





(3)SVM
#--------------------------------
# 匯入外部模組
#--------------------------------
import numpy as np
import pandas as pd
from sklearn import svm

#-------------------------------------------------
# 花萼長:0, 花萼寬:1, 花瓣長:2, 花瓣寬:3, 花種:4
#-------------------------------------------------
df = pd.read_csv('iris.csv', names=['d0', 'd1', 'd2', 'd3', 'd4'])

#---------------------------
# 亂數重排資料
#---------------------------
df2 = df.sample(frac=1)
print(df2)


#---------------------------
# 訓練資料個數
#---------------------------
tn=120

#---------------------------
# 訓練資料及標籤
#---------------------------
training_data  = df2[['d0', 'd1', 'd2', 'd3']][:tn]
training_label = df2['d4'][:tn]

#---------------------------
# 測試資料及標籤
#---------------------------
testing_data  = df2[['d0', 'd1', 'd2', 'd3']][tn:]
testing_label = df2['d4'][tn:]


#***********************************************
# 建立自動分類機器人
#***********************************************
svm_linear = svm.SVC(kernel='rbf', C=1.0)
svm_linear.fit(training_data, training_label)

#---------------------------
# 分類機器人測試
#---------------------------
print('正確:')
print(testing_label.values.tolist())
print()

predict = svm_linear.predict(testing_data)
print('預測:')
print(predict)
print()

#---------------------------
# 和正確資料比對
#---------------------------
results = testing_label == predict
print('比對:')
print(results)
print()

#---------------------------
# 正確率
#---------------------------
print('正確率:', round(np.sum(results)/len(results), 2))
